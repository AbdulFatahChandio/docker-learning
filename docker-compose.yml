version: '3.9'

services:
  # Development Service
  app-dev:
    container_name: ${POSTGRES_DEV_CONTAINER}
    build:
      context: .
      dockerfile: Dockerfile.dev
    env_file:
      - .env.development
    ports:
      - "${PORT}:3000"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - postgres
    profiles:
      - dev
    networks:
      - app-network

  # Production Service
  app-prod:
    container_name: ${POSTGRES_PROD_CONTAINER}
    build:
      context: .
      dockerfile: Dockerfile.prod
    env_file:
      - .env.development
    ports:
      - "${PORT}:3000"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - postgres
    profiles:
      - prod
    networks:
      - app-network

  # Database Service (PostgreSQL)
  postgres:
    container_name: ${POSTGRES_CONTAINER_NAME}
    image: postgres:17.6
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT}:5432"   # host:container
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - app-network

  # pgAdmin Service
  pgadmin:
    container_name: ${PG_ADMIN_CONTAINER_NAME}
    image: dpage/pgadmin4
    restart: unless-stopped
    depends_on:
      - postgres
    ports:
      - "${PG_ADMIN_PORT}:${PG_ADMIN_EXPOSE_PORT}"
    volumes:
      - pgadmin-data:/var/lib/pgadmin/data
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PG_ADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PG_ADMIN_PASSWORD}
    networks:
      - app-network

volumes:
  postgres-data:
    driver: local
  pgadmin-data:
    driver: local

networks:
  app-network:
    driver: bridge
